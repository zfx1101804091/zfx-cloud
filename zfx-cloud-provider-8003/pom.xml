<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <artifactId>zfx-cloud</artifactId>
    <groupId>com.zfx.cloud</groupId>
    <version>1.0-SNAPSHOT</version>
  </parent>
  
  <artifactId>zfx-cloud-provider-8003</artifactId>
  <name>zfx-cloud-provider-8003</name>
  
  <dependencies>
    <!-- 引入自己定义的api通用包，可以使用Dept部门Entity -->
    <dependency>
      <groupId>com.zfx.cloud</groupId>
      <artifactId>zfx-cloud-api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <!-- 将微服务provider侧注册进eureka -->
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-eureka</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-config</artifactId>
    </dependency>
    <!--微服务info内容详细信息: actuator监控信息完善 -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
    </dependency>
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>druid</artifactId>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mybatis.spring.boot</groupId>
      <artifactId>mybatis-spring-boot-starter</artifactId>
    </dependency>
    <!--
    Jetty与Tomcat的对比：
        ①Jetty 比较容易贴合第三方框架，比如你可以直接用 Spring 配置一个 Jetty 服务器
        ②直接可以将 Jetty 作为提供 HTTP 服务的组件，嵌入到应用中
        ③Jetty 是面向 Handler 的架构，而 Tomcat 是面向容器的架构
        ④Jetty 默认采用 NIO 技术，而 Tomcat 默认是 BIO
        ⑤Jetty 高度模块化，可以很灵活的管理拓展组件，而 Tomcat 对其他组件的管理则相对困难
    -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-jetty</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
    </dependency>
    <!-- 修改后立即生效，热部署 -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>springloaded</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
    </dependency>
  </dependencies>
</project>
